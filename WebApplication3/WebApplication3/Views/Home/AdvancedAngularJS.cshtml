
<h1>Shopping List with a Promise</h1>

<div id="di1" ng-controller="ShoppingListController as ctrl">
  <h3>Shopping List</h3>
  @* below up to next 5 Lines (to <div ng-show..) can be replaced with <input-Item></input-Item>  *@
  <input type="text" ng-model="ctrl.itemName" placeholder="item name" />
  <input type="text" ng-model="ctrl.itemQuantity" placeholder="quantity" />
  boxes
  <button ng-click="ctrl.addItem();">Add Item</button>
  <div ng-show="ctrl.response.errorMessage" class="error">Error: </div>
  <ol>
    <li ng-repeat="item in ctrl.items">
      @* below is for {{item.Name}} with the quantity of {{item.Quantity}} *@
      <list-item-desc></list-item-desc>    @* list-item-desc is normalized from .directive('listItemDesc',..) of js (AdvancedAngularJS.cshtml.js) *@
      <button ng-click="ctrl.removeItem($index);">Remove</button>
    </li>
  </ol>

  @* $http service call *@
  <div ng-controller="MenuCategoriesController as menu">
    <h3>List of Menu Categories</h3>
    <ul>
      <li ng-repeat="item in menu.categories">
        (<a href=" " ng-click="menu.logMenuItem(item.Id)">{{item.Id}}</a>)
        {{item.Name}} with the quantity of {{item.Quantity}}
      </li>
    </ul>
  </div>
</div>

@* below is a slightly modified copy of the above *@
<div id="di2" ng-controller="ShoppingListController as ctrl">
  <h3>Shopping List 2</h3>
  <input-Item></input-Item>  @* input-Item is normalized from .directive('inputItem',..) of js (AdvancedAngularJS.cshtml.js) *@
  <ol>
    <li ng-repeat="item in ctrl.items">
      <list-item-desc></list-item-desc>   @* list-item-desc is normalized from .directive('listItemDesc',..) of js (AdvancedAngularJS.cshtml.js) *@
      <button ng-click="ctrl.removeItem($index);">Remove</button>
    </li>
  </ol>

</div>

@* .directive(..) Attribute Isolate = or @ *@
<div id="di3" ng-controller="ShoppingListController as ctrl1">
  @*<h3>Shopping List 3</h3>*@
  <input type="text" ng-model="ctrl1.itemName" placeholder="item name" />
  <input type="text" ng-model="ctrl1.itemQuantity" placeholder="quantity" />
  boxes
  <button ng-click="ctrl1.addItem();">Add Item</button>
  <div ng-show="ctrl1.response.errorMessage" class="error">Error: </div>
  <shopping-list my-ctrl="ctrl1" title="{{ctrl1.title}}"></shopping-list>  @* use .directive(..) with isolate scope my-ctrl from 'myCtrl' of ddo *@
</div>
@* below is a copy of the above for testing Directive Isolate *@
<div id="di4" ng-controller="ShoppingList2Controller as ctrl2">
  @*<h3>Shopping List 4</h3>*@
  <input type="text" ng-model="ctrl2.itemName" placeholder="item name" />
  <input type="text" ng-model="ctrl2.itemQuantity" placeholder="quantity" />
  boxes
  <button ng-click="ctrl2.addItem();">Add Item</button>
  <shopping-list my-ctrl="ctrl2" title="Shopping List 4 (Limited to 3 items)"></shopping-list>  @* use .directive(..) with isolate scope *@
  <div ng-if="ctrl2.errorMessage" class="error"> Error: {{ctrl2.errorMessage}} </div>
</div>

@* below is for a controller inside of Directive *@
<br />
<div id="di6" ng-controller="ShoppingList2Controller as ctrl3">
  @*<h3>Shopping List 5</h3>*@
  <input type="text" ng-model="ctrl3.itemName" placeholder="item name" />
  <input type="text" ng-model="ctrl3.itemQuantity" placeholder="quantity" />
  boxes
  <button ng-click="ctrl3.addItem();">Add Item</button>
  @*below items="ctrl3.items" is the key which is different from <shopping-list my-ctrl="ctrl2" ...> *@
  <shopping-list3 items="ctrl3.items" title="{{ctrl3.title}}"></shopping-list3>  @* use .directive(..) with isolate scope and a controller inside of it *@

  @* below error comes from shopping-list3, so should be handled inside shopping-list3 which leads to a request of placing a controller inside a directive *@
  @*<div ng-if="ctrl3.errorMessage" class="error"> Error: {{ctrl3.errorMessage}} </div>*@

</div>

@* below is for Directive: link *@
<br />
<div id="di7" ng-controller="ShoppingList2Controller as ctrl3">
  <input type="text" ng-model="ctrl3.itemName" placeholder="item name" />
  <input type="text" ng-model="ctrl3.itemQuantity" placeholder="quantity" />
  boxes
  <button ng-click="ctrl3.addItem();">Add Item</button>
  @*below items="ctrl3.items" is the key which is different from <shopping-list my-ctrl="ctrl2" ...> *@
  <shopping-list4 items="ctrl3.items" title="{{ctrl3.title}}"></shopping-list4>  @* use .directive(..) with link *@

  @* below error comes from shopping-list3, so should be handled inside shopping-list3 which leads to a request of placing a controller inside a directive *@
  @*<div ng-if="ctrl3.errorMessage" class="error"> Error: {{ctrl3.errorMessage}} </div>*@

</div>

@* below is for Directive: transclude *@
<br />
<div id="di8" ng-controller="ShoppingList5Controller as ctrl5">
  <input type="text" ng-model="ctrl5.itemName" placeholder="item name" />
  <input type="text" ng-model="ctrl5.itemQuantity" placeholder="quantity" />
  boxes
  <button ng-click="ctrl5.addItem();">Add Item</button>
  @*below items="ctrl5.items" is the key which is different from <shopping-list my-ctrl="ctrl2" ...> *@
  <shopping-list5 id="list5" items="ctrl5.items" title="{{ctrl5.title}}">
    <div> @* this outter div is mapped to div of shoppingList5>AdvancedAngularJS_InputItem_transclude.html  *@
      @* the content below of the outter div for error messages is placed here under ctrl5 in the main cshtml and in ctrl5 but their display is controlled by DDO: both ShoppingList5DirectiveLink and the <div class="error2" ng-transclude></div> of AdvancedAngularJS_InputItem_transclude.html  *@
      @* below are not displayed by default controlled in Site.css:.error2 > display: none *@
      <div class="title">Oh, the horror!</div>
      <div>{{ctrl5.warning}}</div>
    </div>
  </shopping-list5>  @* use .directive(..) with transclude *@


</div>



@section scripts {
  <script src="~/Scripts/angular.js"></script>
  <script src="~/Scripts_Custom/index.cshtml.js"></script>
  <script src="~/Scripts_Custom/AdvancedAngularJS.cshtml.js"></script>
}
